// если классу присвоен модификатор public, то имя класса должно совпадать
// с именем файла, иначе не скомпилируется

// на один файл может быть только один публичный класс
// но можно создавать в этом файле другие классы без public
// также можно создавать классы внутри классов
public class HelloWorld {
    // точка входа в нашу программу
    // по соглашению этот метод должен всегда быть с таким именем и такими параметрами
    // с другими программа скомпилируется, но не запустится
    // если метод объявлен правильно, то в args придет массив параметров командной строки
    // с которыми программа была запущена
    public static void main(String[] args) {
        // аналог print - тоже самое, но не переводит курсор на новую строку
        System.out.println("Hello world");
        // таким образом можно завершить программу с кодом ошибки
        // System.exit(-1);
    }
}

// JRE - java runtime environment, содержит только виртуальную машину
//       не содержит компилятор и инструменты разработчика, как JDK

// скомпилировать программу в консоли javac далее через пробел перечислить все необходимые java файлы
// команда создасть файл HelloWorld.class с содержимым в формате java bite code для виртуальной машины
// javap -v HelloWorld.class команда для просмотра содержимого скомпилированного файла
// байткод оперирует классами и методами, в нем также нет указателей памяти
// java HelloWorld - для запуска скомпиленной программы, она сама найдет .class файл
// java -classpath /some/path/to/classes HelloWorld - если классы программы находятся в другой директории
// если программа состоит из нескольких классов,
// то во время исполнения они все должны быть доступны виртуальной машине

// jar cfe hw.jar HelloWorld HelloWorld.class
// эта команда упаковывает классы в архив, добавляя манифест с метаданными
// jar cfe hw.jar сама команда, далее имя главного класса, далее перечисление всех входящих классов
// jar tf hw.jar просмотреть содержимое архива
// jar xf hw.jar распаковать архив
// java -jar hw.jar запустить программу
// java -classpath hw.jar HelloWorld запустить программу, если главный класс не известен
//      в classpath допускаются не только классы, но и сторонние архивы
// javac -classpath lib.jar HelloWorld.java скомпилировать программу, которая использует сторонние архивы
// но при таком использовании, при запуске тоже нужно указывать сторонние либы
// java -classpath lib.jar:hw.jar HelloWorld.java
//      под линукс разделителем используется ":" а под windows ";"

// JIT - just in time. Компиляция на лету из байт кода, в машинный код